---
# This playbook generates the DCOS installation/configuration files

# Install docker-py as a workaround for Ansible issue
- name: make sure docker-python RPM is not installed
  yum:
    name: docker-python
    state: absent

- name: make sure epel-release is installed
  yum:
    name: epel-release
    state: present

- name: make sure pip is installed
  yum:
    name: python-pip
    state: present

- name: make sure required PyPi packages are installed
  pip: name={{ item }} state=present
  with_items:
    - docker-py==1.2.3
    - six>=1.4.0

# ZooKeeper
- name: Start ZooKeeper for shared storage
  docker:
    name: dcos_int_zk
    image: jplock/zookeeper
    state: started
    ports:
    - "2181:2181"
    - "2888:2888"
    - "3888:3888"
  when: exhibitor == "zookeeper"

# Create NFS Share
- yum: name=nfs-utils state=latest
  when: exhibitor == "shared_filesystem"
- file: path=/shared-mount state=directory mode=0777
  when: exhibitor == "shared_filesystem"
- lineinfile: dest=/etc/exports regexp=^/shared-mount line='/shared-mount    *(rw,sync,no_root_squash,no_all_squash)'
  when: exhibitor == "shared_filesystem"
- service: name=rpcbind enabled=yes state=started
  when: exhibitor == "shared_filesystem"
- service: name=nfs-server enabled=yes state=started
  when: exhibitor == "shared_filesystem"
- service: name=nfs-lock enabled=yes state=started
  when: exhibitor == "shared_filesystem"
- service: name=nfs-idmap enabled=yes state=started
  when: exhibitor == "shared_filesystem"

# Prepare the directories and download installation file
- file: path=/tmp/dcos-install state=directory mode=0755
- file: path=/tmp/dcos-install/genconf/ state=directory mode=0755
- get_url: url="{{ dcos_download }}" dest=/tmp/dcos-install/dcos_generate_config.sh mode=0440

# Create IP detection script
- template: src=ip-detect-aws dest=/tmp/dcos-install/genconf/ip-detect mode=0644
  when: provider == "aws"
- template: src=ip-detect-default dest=/tmp/dcos-install/genconf/ip-detect mode=0644
  when: provider == "default"

# Generate DC/OS configuration file
- template: src=config-zookeeper.yaml dest=/tmp/dcos-install/genconf/config.yaml mode=0644
  when: exhibitor == "zookeeper"
- template: src=config-aws_s3.yaml dest=/tmp/dcos-install/genconf/config.yaml mode=0644
  when: exhibitor == "aws_s3"
- template: src=config-shared_filesystem.yaml dest=/tmp/dcos-install/genconf/config.yaml mode=0644
  when: exhibitor == "shared_filesystem"
- template: src=config-static.yaml dest=/tmp/dcos-install/genconf/config.yaml mode=0644
  when: exhibitor == "static"

# Generate DC/OS bootstrap files
- shell: bash dcos_generate_config.sh chdir=/tmp/dcos-install/

# Nginx
- name: Start web server to serve the bootstrap files
  docker:
    name: dcos_nginx
    image: nginx
    state: started
    ports:
    - "8080:80"
    volumes:
    - "/tmp/dcos-install/genconf/serve:/usr/share/nginx/html:ro"
